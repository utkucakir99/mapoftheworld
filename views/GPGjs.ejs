<!DOCTYPE html>
<meta charset="utf-8">

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v4.js"></script>

<!-- Create a div where the graph will take place -->
<div id="GPG-viz"></div>



        <script>
// set the dimensions and margins of the graph
var margin = {top: 10, right: 10, bottom: 30, left: 90},
        width = 800 - margin.left - margin.right,   // X-Achse
        height = 600 - margin.top - margin.bottom;  // Y-Achse
// append the svg object to the body of the page
var svg = d3.select("#GPG-viz")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")")
          
// Parse the Data
d3.csv("/data/GPGdata", function(data) {
// sort data
data.sort(function(b, a) {
  return a.Value - b.Value;
});
// X-Achse 
var x = d3.scaleLinear()
  .domain([0, 28])
  .range([ 0, width]);
svg.append("g")
  .attr("transform", "translate(0," + height + ")")
  .call(d3.axisBottom(x))
  .selectAll("text")
    .attr("transform", "translate(-10,0)rotate(-45)")
    .style("text-anchor", "end");
svg.append("text")
    .attr("text-anchor", "end")
    .attr("x", width)
    .attr("y", height + margin.top + 20)
    .style("font-size", "13px")
    .text("in %");
    
    
    
// Y axis
var y = d3.scaleBand()
  .range([ 0, height ])
  .domain(data.map(function(d) { return d.Country; }))
  .padding(1);
svg.append("g")
  .call(d3.axisLeft(y))
  /* svg.append("text")
    .attr("text-anchor", "end")
    .attr("transform", "rotate(0)")
    .attr("y", -margin.left+70)
    .attr("x", -margin.top + 100)
    .text("LÃ¤nder") */
    var tooltip = d3.select("#GPG-viz")
    .append("div")
    .style("opacity", 0)
    .attr("class", "tooltip")
    .style("background-color", "steelblue")
    .style("color", "white")
    .style("border-radius", "5px")
    .style("padding", "10px")
    
    var showTooltip = function(d) {
    tooltip
      .transition()
      .duration(100)
      .style("opacity", 1)
    tooltip
      .html("Gender Pay Gap in %: " + d.Value)
      .style("left", (d3.mouse(this)[0]+20) + "px")
      .style("top", (d3.mouse(this)[1]) + "px")
  }
  var moveTooltip = function(d) {
    tooltip
    .style("left", (d3.mouse(this)[0]+20) + "px")
    .style("top", (d3.mouse(this)[1]) + "px")
  }
  // A function that change this tooltip when the leaves a point: just need to set opacity to 0 again
  var hideTooltip = function(d) {
    tooltip
      .transition()
      .duration(100)
      .style("opacity", 0)
  }
    // den Text: GPG 2015
svg.append("text")
    .attr("x", 500)
    .attr("y", 300)
    .text("GPG")
    
    .style("font-size", "50px")
    .attr("alignment-baseline","middle")
    .style("fill", "grey")
svg.append("text")
    .attr("x", 500)
    .attr("y", 350)
    .text("2019")
    
    .style("font-size", "50px")
    .attr("alignment-baseline","middle")
    .style("fill", "grey")
  
// Die Linien von der Y-Achse bis zum Kreis
svg.selectAll("myline")
  .data(data)
  .enter()
  .append("line")
    .attr("x1", x(0))
    .attr("x2", x(0))
    .attr("y1", function(d) { return y(d.Country); })
    .attr("y2", function(d) { return y(d.Country); })
    .attr("stroke", "grey")
// Circles -> start at X=0
svg.selectAll("mycircle")
  .data(data)
  .enter()
  .append("circle")
    .attr("cx", x(0) )
    .attr("cy", function(d) { return y(d.Country); })
    .attr("r", "7")
    .style("fill", "Steelblue")                               // Farbe der Kreise 
    .attr("stroke", "green")
    .on("mouseover", showTooltip )
        .on("mousemove", moveTooltip )
        .on("mouseleave", hideTooltip )
// Change the X coordinates of line and circle
svg.selectAll("circle")
  .transition()
  .duration(2000)
  .attr("cx", function(d) { return x(d.Value); })
svg.selectAll("line")
  .transition()
  .duration(2000)
  .attr("x1", function(d) { return x(d.Value); })
  
})
</script>