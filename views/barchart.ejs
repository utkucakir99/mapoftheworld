<!DOCTYPE html>
<meta charset="utf-8">

<head>

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v4.js"></script>


<!-- Create a div where the graph will take place -->
<div id="Arbeitslosenquote_DE"></div>



</head>

<script>
  // set the dimensions and margins of the graph
  var margin = {top: 30, right: 30, bottom: 70, left: 60},
      width = 700 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;
  
  // append the svg object to the body of the page
  var svg = d3.select("#Arbeitslosenquote_DE")
    .append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")")
            
    
            
  
  
  // Initialize the X axis
  var x = d3.scaleBand()
    .range([ 0, width ])
    .padding(0.2)
              // Größte der Balken (drinnen im Koordinatensystem)
  var xAxis = svg.append("g")
    .attr("transform", "translate(0," + height + ")")
    
  
  // Initialize the Y axis
  var y = d3.scaleLinear()
    .range([ height, 0]);
  var yAxis = svg.append("a")
    .attr("class", "myYaxis")
    .text("Prozentangaben")
    
   // Tooltip Element für die Funktionen: on mouseover, usw.
   const tooltip = d3.select("body")
        .append("div")
        .attr("class","d3-tooltip")
        .style("position", "absolute")
        .style("z-index", "10")
        .style("visibility", "hidden")
        .style("padding", "15px")
        .style("background", "black")               // Farbauswahl des cards, bei mouseover 
        .style("border-radius", "5px")
        .style("color", "#fff")
        .style("font-family", "Helvetica")
  
  // A function that create / update the plot for a given variable:
  function update(selectedVar) {
  
    // Parse the Data
    d3.csv("/barplotnew", function(data) {
  
      // x-Achse
      x.domain(data.map(function(d) { return d.year; }))
      xAxis.transition().duration(1000).call(d3.axisBottom(x))
  
      // Y-Achse
      y.domain([0, d3.max(data, function(d) { return +d[selectedVar] }) ]);
      yAxis.transition().duration(1000).call(d3.axisLeft(y));
  
      // variable u: map data to existing bars
      var u = svg.selectAll("rect")
        .data(data)
           
  
      // update bars
      u
        .enter()
        .append("rect")
        .merge(u)
        .transition()
        .duration(1000)
          .attr("x", function(d) { return x(d.year); })
          .attr("y", function(d) { return y(d[selectedVar]); })
          .attr("width", x.bandwidth())
          .attr("height", function(d) { return height - y(d[selectedVar]); })
          .attr("fill", "Steelblue");   
        
          
    })
  
  }
  
// Beschriftung der Koordinatenachsen:
svg.append("text")
    .attr("text-anchor", "end")
    .attr("x", width)
    .attr("y", height + margin.top + 10)
    .text("Jahr")
// Y axis label:
svg.append("text")
    .attr("text-anchor", "end")
    .attr("transform", "rotate(-90)")
    .attr("y", -margin.left+30)             // 
    .attr("x", -margin.top)
    .text("Quote in %")
  
  // Initialize plot
  update('DE')
  
  </script>