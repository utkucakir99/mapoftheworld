<!DOCTYPE html>
<meta charset="utf-8">


<script src="https://d3js.org/d3.v4.js"></script>

<div id="my_dataviz"></div>



<script>
    // set the dimensions and margins of the graph
    var margin = {top: 10, right: 30, bottom: 90, left: 40},
        width = 1150 - margin.left - margin.right,
        height = 700 - margin.top - margin.bottom;
    
    // ab hier erstellen wir unseren svg-element mit d3.select
    var svg = d3.select("#my_dataviz")                  
      .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform",
              "translate(" + margin.left + "," + margin.top + ")")
              .attr("viewBox", `0 0 700 1150`)
              
             
    // Parse the Data
    d3.csv("/data/GDPdata", function(data) {  
    
    // X-Achse: 
    var x = d3.scaleBand()
      .range([ 0, width ])
      .domain(data.map(function(d) { return d.Country; }))
      .padding(0.1);                                            // Die breite der Balken im Koordinatensystem 
    
      svg.append("g")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x))
      
      
      .selectAll("text")
        .attr("transform", "translate(-10,0)rotate(-45)")
        .style("text-anchor", "end")
        
        
    
    // Y- Achse: 
    var y = d3.scaleLinear()
      .domain([0, 23])                   // Y-Achst die max. Anzeige dee BIPS
      .range([ height, 0]);
    svg.append("g")
      .call(d3.axisLeft(y));
      
      // Beschriftung der Koordinatenachsen:
svg.append("text")
    .attr("text-anchor", "end")
    .attr("x", width)
    .attr("y", height + margin.top + 70)
    .text("Länder");
// Y axis label:
svg.append("text")
    .attr("text-anchor", "end")
    .attr("transform", "rotate(-90)")
    .attr("y", -margin.left+10)
    .attr("x", -margin.top)
    .text("in Mrd. $")
      // Tooltip Element für die Funktionen: on mouseover, usw.
      const tooltip = d3.select("body")
        .append("div")
        .attr("class","d3-tooltip")
        .style("position", "absolute")
        .style("z-index", "10")
        .style("visibility", "hidden")
        .style("padding", "15px")
        .style("background", "black")               // Farbauswahl des cards, bei mouseover 
        .style("border-radius", "5px")
        .style("color", "#fff")
        .style("font-family", "Helvetica")
        
    
        // Die Balken Gestaltung:        
    svg.selectAll("mybar")
      .data(data)
      .enter()
      .append("rect")
        .attr("x", function(d) { return x(d.Country); })
        .attr("width", x.bandwidth())
        .attr("fill", "Steelblue")                              // Bestimmung der Balkenfarbe
       
        .attr("height", function(d) { return height - y(0); }) 
        .attr("y", function(d) { return y(0); })
        .on("mouseover", function(d, i) {
          tooltip.html("Land: " + d.Country + "<br>" + "BIP/GDP: " + d.Value + " Mrd. $")   // Daten wenn man auf dem Balken drüber ist 
          
          .style("visibility", "visible");
          d3.select(this)
            .attr("fill", shadeColor(bar_color, -15));
        })
        .on("mousemove", function(){
          tooltip
            .style("top", (event.pageY-10)+"px")
            .style("left",(event.pageX+10)+"px");
        })
        .on("mouseout", function() {
          tooltip.html(``).style("visibility", "hidden");
          d3.select(this).attr("fill", bar_color);
        });
        
    
    // Animation
    svg.selectAll("rect")
      .transition()
      .duration(800)
      .attr("y", function(d) { return y(d.Value); })
      .attr("height", function(d) { return height - y(d.Value); })
      .delay(function(d,i){console.log(i) ; return(i*100)})
      
    
    })
    d3.select("#byKey").on("click", function() {
  data.sort(function(a, b) {
    return d3.ascending(a.Country, b.Country)
  })
  x.domain(data.map(function(d) {
    return d.Country;
  }));
  svg.selectAll("mybar")
    .transition()
    .duration(500)
    .attr("x", function(d, i) {
      return x(d.Country);
    })
  svg.selectAll("rect")
    .transition()
    .duration(500)
    .attr("x", function(d, i) {
      return x(d.Country) + x.bandwidth() / 2;
    })
  svg.selectAll("rect")
    .transition()
    .duration(500)
    .attr("transform", function(d, i) {
      return "translate(" + (x(d.Country) + x.bandwidth() / 2 - 8) + "," + (height + 15) + ")" + " rotate(45)"
    })
})
    </script>